// Generated by Dagger (https://dagger.dev).
package com.example.tutorial4_1dependentcomponent;

import com.example.tutorial4_1dependentcomponent.model.Vehicle;
import dagger.MembersInjector;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<Vehicle> mVehicleProvider;

  public MainActivity_MembersInjector(Provider<Vehicle> mVehicleProvider) {
    this.mVehicleProvider = mVehicleProvider;
  }

  public static MembersInjector<MainActivity> create(Provider<Vehicle> mVehicleProvider) {
    return new MainActivity_MembersInjector(mVehicleProvider);}

  @Override
  public void injectMembers(MainActivity instance) {
    injectMVehicle(instance, mVehicleProvider.get());
  }

  public static void injectMVehicle(MainActivity instance, Vehicle mVehicle) {
    instance.mVehicle = mVehicle;
  }
}
