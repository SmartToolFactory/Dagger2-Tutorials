// Generated by Dagger (https://dagger.dev).
package com.example.tutorial5_2dagger_android_subcomponents3.di;

import android.content.Context;
import com.example.tutorial5_2dagger_android_subcomponents3.ToastMaker;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SecondActivityModule_ProvideToastMakerFactory implements Factory<ToastMaker> {
  private final Provider<Context> contextProvider;

  public SecondActivityModule_ProvideToastMakerFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public ToastMaker get() {
    return provideToastMaker(contextProvider.get());
  }

  public static SecondActivityModule_ProvideToastMakerFactory create(
      Provider<Context> contextProvider) {
    return new SecondActivityModule_ProvideToastMakerFactory(contextProvider);
  }

  public static ToastMaker provideToastMaker(Context context) {
    return Preconditions.checkNotNull(SecondActivityModule.provideToastMaker(context), "Cannot return null from a non-@Nullable @Provides method");
  }
}
