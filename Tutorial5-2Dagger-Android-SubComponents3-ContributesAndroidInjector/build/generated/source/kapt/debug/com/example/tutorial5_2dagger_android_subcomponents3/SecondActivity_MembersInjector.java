// Generated by Dagger (https://dagger.dev).
package com.example.tutorial5_2dagger_android_subcomponents3;

import android.content.SharedPreferences;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerAppCompatActivity_MembersInjector;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SecondActivity_MembersInjector implements MembersInjector<SecondActivity> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<SharedPreferences> sharedPreferencesProvider;

  private final Provider<ToastMaker> toastMakerProvider;

  public SecondActivity_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<SharedPreferences> sharedPreferencesProvider,
      Provider<ToastMaker> toastMakerProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.sharedPreferencesProvider = sharedPreferencesProvider;
    this.toastMakerProvider = toastMakerProvider;
  }

  public static MembersInjector<SecondActivity> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<SharedPreferences> sharedPreferencesProvider,
      Provider<ToastMaker> toastMakerProvider) {
    return new SecondActivity_MembersInjector(androidInjectorProvider, sharedPreferencesProvider, toastMakerProvider);}

  @Override
  public void injectMembers(SecondActivity instance) {
    DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectSharedPreferences(instance, sharedPreferencesProvider.get());
    injectToastMaker(instance, toastMakerProvider.get());
  }

  public static void injectSharedPreferences(SecondActivity instance,
      SharedPreferences sharedPreferences) {
    instance.sharedPreferences = sharedPreferences;
  }

  public static void injectToastMaker(SecondActivity instance, ToastMaker toastMaker) {
    instance.toastMaker = toastMaker;
  }
}
