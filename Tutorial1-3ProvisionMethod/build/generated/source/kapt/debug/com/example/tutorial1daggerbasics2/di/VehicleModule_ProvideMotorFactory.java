// Generated by Dagger (https://dagger.dev).
package com.example.tutorial1daggerbasics2.di;

import com.example.tutorial1daggerbasics2.model.Motor;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class VehicleModule_ProvideMotorFactory implements Factory<Motor> {
  private final VehicleModule module;

  public VehicleModule_ProvideMotorFactory(VehicleModule module) {
    this.module = module;
  }

  @Override
  public Motor get() {
    return provideMotor(module);
  }

  public static VehicleModule_ProvideMotorFactory create(VehicleModule module) {
    return new VehicleModule_ProvideMotorFactory(module);
  }

  public static Motor provideMotor(VehicleModule instance) {
    return Preconditions.checkNotNull(instance.provideMotor(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
