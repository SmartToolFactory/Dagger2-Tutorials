// Generated by Dagger (https://dagger.dev).
package com.example.android.architecture.blueprints.todoapp;

import com.example.android.architecture.blueprints.todoapp.data.source.TasksRepository;
import dagger.MembersInjector;
import dagger.android.DaggerApplication_MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ToDoApplication_MembersInjector implements MembersInjector<ToDoApplication> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<TasksRepository> tasksRepositoryProvider;

  public ToDoApplication_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<TasksRepository> tasksRepositoryProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.tasksRepositoryProvider = tasksRepositoryProvider;
  }

  public static MembersInjector<ToDoApplication> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<TasksRepository> tasksRepositoryProvider) {
    return new ToDoApplication_MembersInjector(androidInjectorProvider, tasksRepositoryProvider);}

  @Override
  public void injectMembers(ToDoApplication instance) {
    DaggerApplication_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectTasksRepository(instance, tasksRepositoryProvider.get());
  }

  public static void injectTasksRepository(ToDoApplication instance,
      TasksRepository tasksRepository) {
    instance.tasksRepository = tasksRepository;
  }
}
