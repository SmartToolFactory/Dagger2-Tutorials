// Generated by Dagger (https://dagger.dev).
package com.example.android.architecture.blueprints.todoapp.data.source;

import com.example.android.architecture.blueprints.todoapp.data.source.local.TasksDao;
import com.example.android.architecture.blueprints.todoapp.data.source.local.ToDoDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TasksRepositoryModule_ProvideTasksDaoFactory implements Factory<TasksDao> {
  private final Provider<ToDoDatabase> dbProvider;

  public TasksRepositoryModule_ProvideTasksDaoFactory(Provider<ToDoDatabase> dbProvider) {
    this.dbProvider = dbProvider;
  }

  @Override
  public TasksDao get() {
    return provideTasksDao(dbProvider.get());
  }

  public static TasksRepositoryModule_ProvideTasksDaoFactory create(
      Provider<ToDoDatabase> dbProvider) {
    return new TasksRepositoryModule_ProvideTasksDaoFactory(dbProvider);
  }

  public static TasksDao provideTasksDao(ToDoDatabase db) {
    return Preconditions.checkNotNull(TasksRepositoryModule.provideTasksDao(db), "Cannot return null from a non-@Nullable @Provides method");
  }
}
