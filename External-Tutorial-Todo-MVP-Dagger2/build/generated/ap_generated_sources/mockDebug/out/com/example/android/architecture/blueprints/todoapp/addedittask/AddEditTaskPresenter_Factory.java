// Generated by Dagger (https://dagger.dev).
package com.example.android.architecture.blueprints.todoapp.addedittask;

import com.example.android.architecture.blueprints.todoapp.data.source.TasksRepository;
import dagger.Lazy;
import dagger.internal.DoubleCheck;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AddEditTaskPresenter_Factory implements Factory<AddEditTaskPresenter> {
  private final Provider<String> taskIdProvider;

  private final Provider<TasksRepository> tasksRepositoryProvider;

  private final Provider<Boolean> shouldLoadDataFromRepoProvider;

  public AddEditTaskPresenter_Factory(Provider<String> taskIdProvider,
      Provider<TasksRepository> tasksRepositoryProvider,
      Provider<Boolean> shouldLoadDataFromRepoProvider) {
    this.taskIdProvider = taskIdProvider;
    this.tasksRepositoryProvider = tasksRepositoryProvider;
    this.shouldLoadDataFromRepoProvider = shouldLoadDataFromRepoProvider;
  }

  @Override
  public AddEditTaskPresenter get() {
    return newInstance(taskIdProvider.get(), tasksRepositoryProvider.get(), DoubleCheck.lazy(shouldLoadDataFromRepoProvider));
  }

  public static AddEditTaskPresenter_Factory create(Provider<String> taskIdProvider,
      Provider<TasksRepository> tasksRepositoryProvider,
      Provider<Boolean> shouldLoadDataFromRepoProvider) {
    return new AddEditTaskPresenter_Factory(taskIdProvider, tasksRepositoryProvider, shouldLoadDataFromRepoProvider);
  }

  public static AddEditTaskPresenter newInstance(String taskId, TasksRepository tasksRepository,
      Lazy<Boolean> shouldLoadDataFromRepo) {
    return new AddEditTaskPresenter(taskId, tasksRepository, shouldLoadDataFromRepo);
  }
}
