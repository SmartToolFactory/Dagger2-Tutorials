// Generated by Dagger (https://dagger.dev).
package com.example.android.architecture.blueprints.todoapp.data.source;

import android.app.Application;
import com.example.android.architecture.blueprints.todoapp.data.source.local.ToDoDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TasksRepositoryModule_ProvideDbFactory implements Factory<ToDoDatabase> {
  private final Provider<Application> contextProvider;

  public TasksRepositoryModule_ProvideDbFactory(Provider<Application> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public ToDoDatabase get() {
    return provideDb(contextProvider.get());
  }

  public static TasksRepositoryModule_ProvideDbFactory create(
      Provider<Application> contextProvider) {
    return new TasksRepositoryModule_ProvideDbFactory(contextProvider);
  }

  public static ToDoDatabase provideDb(Application context) {
    return Preconditions.checkNotNull(TasksRepositoryModule.provideDb(context), "Cannot return null from a non-@Nullable @Provides method");
  }
}
