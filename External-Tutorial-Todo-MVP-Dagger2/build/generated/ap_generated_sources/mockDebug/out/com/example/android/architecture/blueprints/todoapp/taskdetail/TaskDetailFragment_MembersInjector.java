// Generated by Dagger (https://dagger.dev).
package com.example.android.architecture.blueprints.todoapp.taskdetail;

import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TaskDetailFragment_MembersInjector implements MembersInjector<TaskDetailFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<String> taskIdProvider;

  private final Provider<TaskDetailContract.Presenter> mPresenterProvider;

  public TaskDetailFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<String> taskIdProvider, Provider<TaskDetailContract.Presenter> mPresenterProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.taskIdProvider = taskIdProvider;
    this.mPresenterProvider = mPresenterProvider;
  }

  public static MembersInjector<TaskDetailFragment> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<String> taskIdProvider, Provider<TaskDetailContract.Presenter> mPresenterProvider) {
    return new TaskDetailFragment_MembersInjector(androidInjectorProvider, taskIdProvider, mPresenterProvider);}

  @Override
  public void injectMembers(TaskDetailFragment instance) {
    DaggerFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectTaskId(instance, taskIdProvider.get());
    injectMPresenter(instance, mPresenterProvider.get());
  }

  public static void injectTaskId(TaskDetailFragment instance, String taskId) {
    instance.taskId = taskId;
  }

  public static void injectMPresenter(TaskDetailFragment instance,
      TaskDetailContract.Presenter mPresenter) {
    instance.mPresenter = mPresenter;
  }
}
