// Generated by Dagger (https://dagger.dev).
package com.example.android.architecture.blueprints.todoapp.taskdetail;

import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TaskDetailFragment_Factory implements Factory<TaskDetailFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<String> taskIdProvider;

  private final Provider<TaskDetailContract.Presenter> mPresenterProvider;

  public TaskDetailFragment_Factory(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<String> taskIdProvider, Provider<TaskDetailContract.Presenter> mPresenterProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.taskIdProvider = taskIdProvider;
    this.mPresenterProvider = mPresenterProvider;
  }

  @Override
  public TaskDetailFragment get() {
    TaskDetailFragment instance = newInstance();
    DaggerFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    TaskDetailFragment_MembersInjector.injectTaskId(instance, taskIdProvider.get());
    TaskDetailFragment_MembersInjector.injectMPresenter(instance, mPresenterProvider.get());
    return instance;
  }

  public static TaskDetailFragment_Factory create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<String> taskIdProvider, Provider<TaskDetailContract.Presenter> mPresenterProvider) {
    return new TaskDetailFragment_Factory(androidInjectorProvider, taskIdProvider, mPresenterProvider);
  }

  public static TaskDetailFragment newInstance() {
    return new TaskDetailFragment();
  }
}
