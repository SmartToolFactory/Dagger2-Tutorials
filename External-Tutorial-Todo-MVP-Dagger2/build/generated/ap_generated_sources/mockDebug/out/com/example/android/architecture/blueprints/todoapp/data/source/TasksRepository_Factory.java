// Generated by Dagger (https://dagger.dev).
package com.example.android.architecture.blueprints.todoapp.data.source;

import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TasksRepository_Factory implements Factory<TasksRepository> {
  private final Provider<TasksDataSource> tasksRemoteDataSourceProvider;

  private final Provider<TasksDataSource> tasksLocalDataSourceProvider;

  public TasksRepository_Factory(Provider<TasksDataSource> tasksRemoteDataSourceProvider,
      Provider<TasksDataSource> tasksLocalDataSourceProvider) {
    this.tasksRemoteDataSourceProvider = tasksRemoteDataSourceProvider;
    this.tasksLocalDataSourceProvider = tasksLocalDataSourceProvider;
  }

  @Override
  public TasksRepository get() {
    return newInstance(tasksRemoteDataSourceProvider.get(), tasksLocalDataSourceProvider.get());
  }

  public static TasksRepository_Factory create(
      Provider<TasksDataSource> tasksRemoteDataSourceProvider,
      Provider<TasksDataSource> tasksLocalDataSourceProvider) {
    return new TasksRepository_Factory(tasksRemoteDataSourceProvider, tasksLocalDataSourceProvider);
  }

  public static TasksRepository newInstance(TasksDataSource tasksRemoteDataSource,
      TasksDataSource tasksLocalDataSource) {
    return new TasksRepository(tasksRemoteDataSource, tasksLocalDataSource);
  }
}
