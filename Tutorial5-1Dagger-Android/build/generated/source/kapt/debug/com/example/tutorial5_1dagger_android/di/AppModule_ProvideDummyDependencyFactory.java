// Generated by Dagger (https://dagger.dev).
package com.example.tutorial5_1dagger_android.di;

import android.content.Context;
import com.example.tutorial5_1dagger_android.DummyDependency;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideDummyDependencyFactory implements Factory<DummyDependency> {
  private final Provider<Context> contextProvider;

  public AppModule_ProvideDummyDependencyFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public DummyDependency get() {
    return provideDummyDependency(contextProvider.get());
  }

  public static AppModule_ProvideDummyDependencyFactory create(Provider<Context> contextProvider) {
    return new AppModule_ProvideDummyDependencyFactory(contextProvider);
  }

  public static DummyDependency provideDummyDependency(Context context) {
    return Preconditions.checkNotNull(AppModule.provideDummyDependency(context), "Cannot return null from a non-@Nullable @Provides method");
  }
}
