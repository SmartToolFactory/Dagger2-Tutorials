// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.72'

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.0-beta03'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.dagger:hilt-android-gradle-plugin:2.28.1-alpha'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// Define versions in a single place
ext {

    supportLibraryVersion = '28.0.0'

    // Sdk and tools
    // Support library and architecture components support minSdk 14 and above.
    minSdkVersion = 21
    targetSdkVersion = 29
    compileSdkVersion = 29

    coreKtxVersion = '1.2.0'
    fragmentVersion = '1.1.0-alpha07'
    fragmentKtxVersion = '1.1.0-rc01'

    // AppCompat
    appCompatVersion = '1.1.0'

    // Material
    materialVersion = '1.2.0-alpha04'

    // ConstraintLayout
    constraintLayoutVersion = '1.1.3'

    // RecyclerView
    recyclerViewVersion = '1.2.0-alpha01'

    // Architecture MVVM & LiveData
    archLifecycleVersion = '2.2.0'

    // Architecture MVVM & LiveData
    archLifecycleVersion = '2.2.0'

    // Navigation Component
    navigationVersion = '2.3.0'

    // Dagger
    daggerVersion = '2.28.1'

    daggerHiltVersion = '2.28-alpha'

    // Room
    roomVersion = '2.2.3'

    // Retrofit
    retrofitVersion = '2.3.0'

    // OkHttpClient
    okHttpVersion = '4.2.1'

    //Gson
    gsonVersion = '2.8.4'

    // RxAndroid
    rxjavaVersion = '2.1.3'
    rxandroidVersion = '2.1.1'

    guavaVersion = '18.0'
    junitVersion = '4.12'
    mockitoVersion = '1.10.19'
    powerMockito = '1.6.2'
    hamcrestVersion = '1.3'
    runnerVersion = '1.0.1'
    rulesVersion = '1.0.1'
    espressoVersion = '3.0.1'

    dexmakerVersion = '1.2'
}

//When there is an error in code generation you will may see
//lots of errors due too missing generated code in your logs, we increase
//how many errors are shown here so that the real error is visible when it is near the end
allprojects {
    afterEvaluate {
        tasks.withType(JavaCompile.class) {
            options.compilerArgs << "-Xmaxerrs" << "500"
        }
    }
}
