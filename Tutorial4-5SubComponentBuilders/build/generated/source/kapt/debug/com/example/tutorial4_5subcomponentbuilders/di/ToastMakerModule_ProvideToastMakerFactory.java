// Generated by Dagger (https://dagger.dev).
package com.example.tutorial4_5subcomponentbuilders.di;

import android.content.Context;
import com.example.tutorial4_5subcomponentbuilders.model.ToastMaker;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ToastMakerModule_ProvideToastMakerFactory implements Factory<ToastMaker> {
  private final ToastMakerModule module;

  private final Provider<Context> contextProvider;

  public ToastMakerModule_ProvideToastMakerFactory(ToastMakerModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public ToastMaker get() {
    return provideToastMaker(module, contextProvider.get());
  }

  public static ToastMakerModule_ProvideToastMakerFactory create(ToastMakerModule module,
      Provider<Context> contextProvider) {
    return new ToastMakerModule_ProvideToastMakerFactory(module, contextProvider);
  }

  public static ToastMaker provideToastMaker(ToastMakerModule instance, Context context) {
    return Preconditions.checkNotNull(instance.provideToastMaker(context), "Cannot return null from a non-@Nullable @Provides method");
  }
}
